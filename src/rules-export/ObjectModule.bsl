#Область ОписаниеПеременных

Перем ЧастьПоиска;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ВыгрузитьПравилаПроверкиКода() Экспорт
	
	ВывестиВЛог("Начало выгрузки правил проверки в файл");
	
	Коллекция = Новый Массив;
	ТаблицаЗначений = ВыборкаПравил();
	
	Для Каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		
		Идентификатор = ИдентификаторПравила(СтрокаТаблицы.Код);
		Если Идентификатор = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПравила = ШаблонОписанияПравил();
		ОписаниеПравила.Code = XMLСтрока(Идентификатор);
		ОписаниеПравила.Name = СтрокаТаблицы.Наименование;
		ОписаниеПравила.Description = СтрокаТаблицы.ОписаниеHTML;
		УстановитьСвойстваТипаИКритичности(ОписаниеПравила, СтрокаТаблицы);
		
		Коллекция.Добавить(ОписаниеПравила);
		
	КонецЦикла;
	
	ВывестиВЛог(СтрШаблон("Будет выгружено %1 правил", Коллекция.Количество()));
	
	Данные = Новый Структура("Rules", Коллекция);
	ЗаписатьВыгрузкуВФайл(ПутьКФайлуВыгрузки, Данные);
	
	ВывестиВЛог("Выгрузка завершена");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыборкаПравил()
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТребованияРеализацияТребования.ПравилоПроверки КАК ПравилоПроверки,
		|	МАКСИМУМ(ТребованияРеализацияТребования.Ссылка.УровеньИсполнения) КАК УровеньИсполнения,
		|	МАКСИМУМ(ТребованияРеализацияТребования.Ссылка.СсылкаНаСтандарт) КАК СсылкаНаСтандарт
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.Требования.РеализацияТребования КАК ТребованияРеализацияТребования
		|
		|СГРУППИРОВАТЬ ПО
		|	ТребованияРеализацияТребования.ПравилоПроверки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ПравилоПроверки КАК ПравилоПроверки,
		|	ВТ.ПравилоПроверки.Код КАК Код,
		|	ВТ.ПравилоПроверки.Наименование КАК Наименование,
		|	ВТ.ПравилоПроверки.ОписаниеHTML КАК ОписаниеHTML,
		|	ВТ.СсылкаНаСтандарт КАК СсылкаНаСтандарт,
		|	ВТ.УровеньИсполнения КАК УровеньИсполнения
		|ИЗ
		|	ВТ КАК ВТ";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ИдентификаторПравила(Код)
	
	Идентификатор = Код;
	Если СтрНайти(Идентификатор, ЧастьПоиска) > 0 Тогда
		Идентификатор = СтрЗаменить(Идентификатор, ЧастьПоиска, "");
		Идентификатор = Формат(Число(Идентификатор), "ЧГ=0");
	Иначе
		Идентификатор = Неопределено;
	КонецЕсли;
	Возврат Идентификатор;
	
КонецФункции

Функция ШаблонОписанияПравил()
	
	Шаблон = Новый Структура;
	Шаблон.Вставить("Code");
	Шаблон.Вставить("Name");
	Шаблон.Вставить("Description");
	Шаблон.Вставить("Type");
	Шаблон.Вставить("Severity");
	Возврат Шаблон;
	
КонецФункции

Процедура УстановитьСвойстваТипаИКритичности(ОписаниеПравила, СтрокаТаблицы)
	
	Если СтрокаТаблицы.УровеньИсполнения = Перечисления.КатегорияТребований.Совместимо
		Или СтрокаТаблицы.УровеньИсполнения = Перечисления.КатегорияТребований.Обязательно Тогда
		
		ОписаниеПравила.Type = "BUG";
		ОписаниеПравила.Severity = "CRITICAL";
		
	Иначе
		
		ОписаниеПравила.Type = "CODE_SMELL";
		ОписаниеПравила.Severity = "INFO";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьВыгрузкуВФайл(ИмяФайла, Данные)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл(ИмяФайла);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	ЗаписьJSON.Закрыть();
	
КонецПроцедуры

Процедура ВывестиВЛог(Знач Сообщение)
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Сообщение;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЧастьПоиска = "АПК_";

#КонецОбласти